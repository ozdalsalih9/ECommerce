@model E_Commerse.Core.Entities.Product
@{
    ViewData["Title"] = Model.Name;
}

<style>
    :root {
        --primary-color: #5c3d74;
        --secondary-color: #8e44ad;
        --accent-color: #c0392b;
        --light-gray: #f9f5fc;
        --dark-gray: #2c2c2c;
        --hover-bg: #f1e8f9;
    }

    .product-detail-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .product-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 3rem;
        margin-bottom: 4rem;
    }

    .product-gallery {
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    }

    .main-image-container {
        height: 500px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--light-gray);
        position: relative;
    }

    .main-image {
        max-height: 100%;
        max-width: 100%;
        object-fit: contain;
        transition: opacity 0.3s ease;
    }

    .thumbnail-slider {
        display: flex;
        padding: 1rem 0;
        position: relative;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border: 2px solid transparent;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-right: 10px;
    }

        .thumbnail:hover,
        .thumbnail.active {
            border-color: var(--secondary-color);
            transform: scale(1.05);
        }

    .product-info {
        padding: 1.5rem;
    }

    .product-title {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: var(--primary-color);
        font-weight: 600;
    }

    .price {
        font-size: 1.8rem;
        font-weight: bold;
        color: var(--secondary-color);
        margin: 1.5rem 0;
    }

    .product-meta {
        color: #666;
        margin-bottom: 1.5rem;
        font-size: 0.95rem;
    }

    .size-selection {
        margin: 2rem 0;
    }

    .stock-message {
        margin-top: 0.5rem;
        font-size: 0.9rem;
        min-height: 1.5rem;
    }

    .add-to-cart {
        padding: 14px 28px;
        font-size: 1.1rem;
        font-weight: bold;
        margin: 2rem 0;
        width: 100%;
        background: var(--secondary-color);
        border: none;
        color: white;
        border-radius: 8px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 10px rgba(142, 68, 173, 0.2);
    }

        .add-to-cart:hover {
            background: #732d91;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(142, 68, 173, 0.3);
        }

        .add-to-cart i {
            margin-right: 10px;
        }

    .product-description {
        margin-top: 2rem;
        padding-top: 2rem;
        border-top: 1px solid #eee;
    }

    .section-title {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        color: var(--primary-color);
        font-weight: 600;
        position: relative;
        padding-bottom: 0.5rem;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 3px;
            background: var(--secondary-color);
        }

    .related-products {
        margin-top: 4rem;
        padding-top: 3rem;
        border-top: 1px solid #eee;
    }

    .related-products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }

    .product-card {
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.3s ease;
        background: white;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        border: 1px solid #eee;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

    .product-card-img {
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        background: var(--light-gray);
    }

    .product-card img {
        max-height: 100%;
        max-width: 100%;
        object-fit: contain;
    }

    .product-card-body {
        padding: 1.5rem;
    }

    .product-card-title {
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
        color: var(--primary-color);
        font-weight: 500;
    }

    .product-card-price {
        font-size: 1.2rem;
        font-weight: bold;
        color: var(--secondary-color);
        margin: 0.5rem 0;
    }

    .product-card-link {
        display: inline-block;
        width: 100%;
        padding: 8px 0;
        text-align: center;
        background: var(--light-gray);
        color: var(--primary-color);
        border-radius: 6px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

        .product-card-link:hover {
            background: var(--secondary-color);
            color: white;
            text-decoration: none;
        }

    .slick-prev, .slick-next {
        background: var(--light-gray);
        border-radius: 50%;
        color: var(--secondary-color);
        border: 1px solid #ccc;
        width: 32px;
        height: 32px;
        display: flex !important;
        align-items: center;
        justify-content: center;
    }

        .slick-prev:hover, .slick-next:hover {
            background: var(--secondary-color);
            color: white;
        }

    /* Responsive Styles */
    @@media (max-width: 992px) {
        .product-content {
            grid-template-columns: 1fr;
        }

        .main-image-container {
            height: 400px;
        }
    }

    @@media (max-width: 768px) {
        .product-title {
            font-size: 1.7rem;
        }

        .price {
            font-size: 1.5rem;
        }

        .related-products-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }
    }

    @@media (max-width: 576px) {
        .main-image-container {
            height: 300px;
        }

        .thumbnail {
            width: 60px;
            height: 60px;
        }
    }
</style>

<div class="product-detail-container">
    <div class="product-content">
        <div class="product-gallery">
            <div class="main-image-container">
                <img src="/img/Products/MainImage/@Model.Image" alt="@Model.Name" class="main-image" id="mainImage" />
            </div>

            <div class="thumbnail-slider" id="thumbnailSlider">
                <img src="/img/Products/MainImage/@Model.Image" alt="@Model.Name"
                     class="thumbnail active"
                     onclick="changeMainImage(this, '/img/Products/MainImage/@Model.Image')" />

                @foreach (var image in Model.ProductImages)
                {
                    <img src="/img/Products/OtherImages/@image.ImagePath" alt="@Model.Name"
                         class="thumbnail"
                         onclick="changeMainImage(this, '/img/Products/OtherImages/@image.ImagePath')" />
                }
            </div>
        </div>

        <div class="product-info">
            <h1 class="product-title">@Model.Name</h1>
            <div class="price">@Model.Price.ToString("C")</div>
            <div class="product-meta">Ürün Kodu: @Model.ProductCode</div>

            <div class="size-selection">
                <label class="fw-bold mb-2 d-block">Beden Seçiniz:</label>
                <select id="sizeSelect" class="form-select">
                    <option value="">-- Beden Seçin --</option>
                    @foreach (var size in Model.ProductSizes)
                    {
                        <option value="@size.SizeId" data-stock="@size.Stock">
                            @size.Size.Name @(size.Stock < 10 ? $"(Son {size.Stock} adet)" : "")
                        </option>
                    }
                </select>
                <div id="stockMessage" class="stock-message mt-2"></div>
            </div>
            @if (Model.ProductColors != null && Model.ProductColors.Any())
            {
                <div>
                    <h4>Renkler</h4>
                    <div id="colorOptions" style="display:flex; gap:10px; margin-bottom: 1rem;">
                        @foreach (var pc in Model.ProductColors)
                        {
                            <div class="color-circle"
                                 data-color-id="@pc.ColorId"
                                 title="@pc.Color.Name"
                                 style="width: 30px; height: 30px; border-radius: 50%; background-color:@pc.Color.Code; border: 2px solid transparent; cursor: pointer;"
                                 onclick="selectColor(this)">
                            </div>
                        }
                    </div>

                    <div id="colorImagesContainer" style="display:flex; gap:10px; flex-wrap: wrap;">
                        <!-- Seçilen renk resimleri buraya gelecek -->
                    </div>
                </div>
            }

            <button class="btn add-to-cart">
                <i class="fas fa-shopping-cart"></i> SEPETE EKLE
            </button>

            <div class="product-description">
                <h3 class="section-title">ÜRÜN AÇIKLAMASI</h3>
                <p class="text-muted">@Model.Description</p>
            </div>
        </div>
    </div>

 


    @if (ViewBag.RelatedProducts != null && ViewBag.RelatedProducts.Count > 0)
    {
        <div class="related-products">
            <h2 class="section-title">BENZER ÜRÜNLER</h2>
            <div class="related-products-grid">
                @foreach (var product in ViewBag.RelatedProducts)
                {
                    <div class="product-card">
                        <div class="product-card-img">
                            <img src="/img/Products/MainImage/@product.Image" alt="@product.Name" />
                        </div>
                        <div class="product-card-body">
                            <h4 class="product-card-title">@product.Name</h4>
                            <div class="product-card-price">@product.Price.ToString("C")</div>
                            <a asp-action="Details" asp-route-id="@product.Id" class="product-card-link">İncele</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

    <script>
        function changeMainImage(thumbnailElement, imageUrl) {
            document.getElementById('mainImage').src = imageUrl;
            document.querySelectorAll('.thumbnail').forEach(thumb => {
                thumb.classList.remove('active');
            });
            thumbnailElement.classList.add('active');
        }

        $(document).ready(function () {
            $('#sizeSelect').change(function () {
                const selectedOption = $(this).find('option:selected');
                const stock = selectedOption.data('stock');
                const sizeName = selectedOption.text().split('(')[0].trim();

                if (selectedOption.val()) {
                    if (stock > 0) {
                        const stockText = stock < 10 ? `Son ${stock} adet!` : `${stock} adet stokta`;
                        $('#stockMessage').html(`${sizeName} beden: <span class="text-success">${stockText}</span>`);
                    } else {
                        $('#stockMessage').html(`${sizeName} beden: <span class="text-danger">Stokta yok</span>`);
                    }
                } else {
                    $('#stockMessage').html('');
                }
            });

            $('#thumbnailSlider').slick({
                dots: false,
                arrows: true,
                infinite: false,
                speed: 300,
                slidesToShow: 5,
                slidesToScroll: 1,
                prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-chevron-left"></i></button>',
                nextArrow: '<button type="button" class="slick-next"><i class="fas fa-chevron-right"></i></button>',
                responsive: [
                    { breakpoint: 992, settings: { slidesToShow: 4 } },
                    { breakpoint: 768, settings: { slidesToShow: 3 } },
                    { breakpoint: 576, settings: { slidesToShow: 2 } }
                ]
            });

            let currentIndex = 0;
            const thumbnails = $('.thumbnail');

            function rotateMainImage() {
                currentIndex = (currentIndex + 1) % thumbnails.length;
                const thumbnail = thumbnails[currentIndex];
                const imageUrl = $(thumbnail).attr('src');
                changeMainImage(thumbnail, imageUrl);
            }

            if (thumbnails.length > 1) {
                setInterval(rotateMainImage, 5000);
            }
        });
    </script>


}